$color-base: #673AB7;
$color-meta: #9C27B0;
$color-link: #E91E63;
$color-style: #FF5722;
$color-script: #ff9800;

@mixin base(){

  display: block;
  font: 14px/1.5 Consolas,monaco,monospace;
  
  background: $color-base;
  color: #FFF;
  padding: 3px 6px;
  border-radius: 3px;
  margin: 2px;
  
}

@mixin singleline(){
    white-space: nowrap;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;  
}

html{
  border: 10px solid $color-base;
  padding: 10px;
}

//hide any element named "css-head-inspector" 
//using the bookmarlet styles will be injected using this name
[name="css-head-inspector"]{
  display: none !important
}


head,
title,
link,
title,
meta,
style,
script{
  
  //super high value to ensure top level visibility
  z-index: 99999999;
  @include base();
  @include singleline();
  
}

html,
head,
body{
  
  position: relative;
  padding-top: 32px;
  padding-bottom: 32px;
  margin: 0;
  background: transparent;

  &:before,
  &:after{
    content: '';
    position: absolute;
    @include base();
  }

  &:before{ top:0; left: 0 }
  &:after{ bottom: 0; left: 0 }  
  
}

html{
  &:before{ content: '<html ! css-head-inspector @version >' }
  &:after{ content: '</html>' }  
}

head{
  &:before{ content: '<head>' }
  &:after{ content: '</head>' }  
}

body{
  &:before{ content: '<body>' }
  &:after{ content: '</body>' }  
}

meta{

  background-color: $color-meta;
    
  &::after{
    content: '<meta ... />';  
  }
  
  &[charset]::after{
    content: '<meta charset="' attr(charset) '">';
  }
  
  &[http-equiv][content]::after{
    content: '<meta http-equiv="' attr(http-equiv) '" content="' attr(content) '">';
  }
  
  &[name][content]::after{
    content: '<meta name="' attr(name) '" content="' attr(content) '">';
  }
  
  &[name][value]::after{
    content: '<meta name="' attr(name) '" value="' attr(value) '">';
  }
  
  &[property][content]::after{
    content: '<meta property="' attr(property) '" content="' attr(content) '">';
  }
  
}

title {
  font-size: 26px;
  font-weight: bold;
}

link{
  
  background-color: $color-link;
  
  &[rel]:not([src]):before {
    content: '<link>';
  }
  &[rel][href]:before {
    content: '<link rel="' attr(rel) '" href="' attr(href) '"';
  }
  &:after{
    content: ' />';
  }

}

script{
  
  background-color: $color-script;
   
  &:not([src]):before {
    content: '<script>';
  }
  &[src]:before {
    content: '<script src="' attr(src) '">';
  }
  &:after {
    content: '</script>';
  }
  
}

style{
  
  background-color: $color-style;
  
  &:not([src]):before {
    content: '<st''yle>';
  }
  &[src]:before {
    content: '<style src="' attr(src) '">';
  }

  &:after {
    content: '</st''yle>';
  }
  
}